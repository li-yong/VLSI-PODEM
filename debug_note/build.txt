
ryan@u24:/mnt/hgfs/Github/VLSI_Testing_f24/podem$ diff --side-by-side --suppress-common-lines  ls_make  ls.clean 
atpg							      <
atpg.o							      <
bfsim.o							      <
bridging.o						      <
checkpoint.o						      <
circuit.o						      <
compiledCodeSim.o					      <
fsim.o							      <
GetLongOpt.o						      <
lex.yy.cc						      <
lex.yy.o						      <
ls_make							      |	ls.make
							      >	ls.make_clean
main.o							      <
path.o							      <
pattern.o						      <
psim.o							      <
readcircuit.tab.cc					      <
readcircuit.tab.h					      <
readcircuit.tab.o					      <
sim.o							      <
stfsim.o						      <
tfatpg.o						      <
ryan@u24:/mnt/hgfs/Github/VLSI_Testing_f24/podem$ 


$ ls -1
GetLongOpt.cc
GetLongOpt.h
LICENSE
Makefile
README
README.pdf
atpg.cc
bfsim.cc
bridging.cc
bridgingFault.h
checkpoint.cc
circuit.cc
circuit.h
compiledCodeSim.cc
fault.h
fsim.cc
gate.h
hash.h
main.cc
path.cc
pattern.cc
pattern.h
psim.cc
readcircuit.l
readcircuit.y
sim.cc
stfsim.cc
tfatpg.cc
tfault.h
typeemu.h

======
bison -d -t readcircuit.y  <<< create re.tab.c 
mv readcircuit.tab.c readcircuit.tab.cc
g++ -c -O2 -Wall -g  -o readcircuit.tab.o readcircuit.tab.cc


flex readcircuit.l  <<< create lex.yy.c
mv lex.yy.c lex.yy.cc
g++ -c -O2 -Wall -g  -o lex.yy.o lex.yy.cc



g++ -c -O2 -Wall -g  -o circuit.o circuit.cc
g++ -c -O2 -Wall -g  -o main.o main.cc
g++ -c -O2 -Wall -g  -o GetLongOpt.o GetLongOpt.cc
g++ -c -O2 -Wall -g  -o atpg.o atpg.cc
g++ -c -O2 -Wall -g  -o fsim.o fsim.cc
g++ -c -O2 -Wall -g  -o sim.o sim.cc
g++ -c -O2 -Wall -g  -o psim.o psim.cc
g++ -c -O2 -Wall -g  -o stfsim.o stfsim.cc
g++ -c -O2 -Wall -g  -o tfatpg.o tfatpg.cc
g++ -c -O2 -Wall -g  -o path.o path.cc
g++ -c -O2 -Wall -g  -o pattern.o pattern.cc
g++ -c -O2 -Wall -g  -o compiledCodeSim.o compiledCodeSim.cc
g++ -c -O2 -Wall -g  -o checkpoint.o checkpoint.cc
g++ -c -O2 -Wall -g  -o bridging.o bridging.cc
g++ -c -O2 -Wall -g  -o bfsim.o bfsim.cc


g++ -O2 -Wall -g -o atpg readcircuit.tab.o lex.yy.o circuit.o main.o GetLongOpt.o atpg.o fsim.o sim.o psim.o stfsim.o tfatpg.o path.o pattern.o compiledCodeSim.o checkpoint.o bridging.o bfsim.o -lreadline -lcurses

<<< no difference on output atpg when no `-lreadline -lcurses`


=============
ryan@u24:/mnt/hgfs/Github/VLSI_Testing_f24/podem$ ./atpg
Input circuit file missing
usage: atpg [options] input_circuit_file
	-print (print out the needed info of input file)
	-info <$val> (specify the needed info.)
	-path (print all the possible paths from source gate to target gate)
	-start <$val> (get the starting gate for the path)
	-end <$val> (get the ending gate for the path)
	-pattern (Generate random pattern)
	-num <$val> (specify the number of the generated pattern)
	-unknown (Generate random pattern with unknown)
	-mod_logicsim (use cpu instructions to compute AND, OR and NOT)
	-simulator <$val> (Generate a compiled code simulator)
	-check_point (Generate fault list by checkpoint theorem)
	-bridging (Generate bridging fault list)
	-bridging_fsim (run stuck-at bridging fault simulation)
	-check_point_fsim (run stuck-at check_point fault simulation)
	-random_pattern (Use random patterns first and then atpg)
	-help (print this help summary)
	-logicsim (run logic simulation)
	-plogicsim (run parallel logic simulation)
	-fsim (run stuck-at fault simulation)
	-stfsim (run single pattern single transition-fault simulation)
	-transition (run transition-fault ATPG)
	-input <$val> (set the input pattern file)
	-output <$val> (set the output pattern file)
	-bt [$val] (set the backtrack limit)



make && ./atpg   -parse_isc -file_isc ../circuits/ISCAS-85_yong/c17.isc   ../circuits/iscas85/c499.bench  


confiure.json
    "configurations": [
        {
            "name": "Debug VLSI Parser",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/atpg",
            "args": [
                "-parse_isc",
                "-file_isc",
                "${workspaceFolder}/../circuits/ISCAS-85_yong/c880.isc",
                "-path",
                "-start",
                "11",
                "-end",
                "19",
                "${workspaceFolder}/../circuits/c17.bench",
            ],
